FUNCTION closest_temperature(temperature, ans)

    DECLARE dummy_temp = temperature
    // Loop over each digit of the temperature, from left to right
    FOR i = 2 DOWNTO 0
        // Extract the i-th digit of the dummy temperature
        DECLARE dig = FLOOR(dummy_temp / 10^i)
        // Check if the digit is 1, 4, or 7
        IF dig == 1 OR dig == 4 OR dig == 7 THEN
            // Calculate the closest temperature above and below the input temperature
            ans[0] = FLOOR(temperature / 10^i) * 10^i + 10^i
            ans[1] = FLOOR(temperature / 10^i) * 10^i - 1
            // Edit the answer array in place
            RETURN
        // Remove the i-th digit from the dummy temperature
        SET dummy_temp = dummy_temp - dig * 10^i
        
    // If none of the digits are 1, 4, or 7, the input temperature is the closest
    ans[0] = temperature
    ans[1] = temperature
END FUNCTION

FUNCTION main()
    // Print the program description
    OUTPUT "This program takes a degree from 0-999 and returns the closest degree that doesn't have 1, 4 & 7 in its digit"
    // Loop until the user chooses to exit
    LOOP
        // Prompt the user for input
        DECLARE temperature = 0
        OUTPUT "Enter temperature: "
        INPUT temperature
        // Call the closest_temperature function to get the closest temperature without 1, 4, or 7 digits
        DECLARE ans as a pointer to an array of 2 integers
        CALL closest_temperature(temperature, ans)
        // Print the closest temperature(s) found
        IF ans[0] != ans[1] THEN
            OUTPUT "Closest temperatures that don't contain 1, 4, or 7: ", ans[0], " ", ans[1]
        ELSE
            OUTPUT "Closest temperature that don't contain 1, 4, or 7: ", ans[0]
    
        // Prompt the user to exit or continue
        DECLARE choice = ""
        OUTPUT "Do you want to exit? (y/n) "
        INPUT choice
        // If the user chooses to exit, break out of the loop and end the program
        IF choice == 'y' OR choice == 'Y' THEN
            EXIT LOOP
        ELSE
          GOTO LOOP
    END LOOP
END FUNCTION
